buildscript {
	ext {
		springBootVersion = '2.4.5'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
		classpath 'org.ajoberstar:gradle-git:1.3.2'
		classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.2'
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.38.0'
		classpath 'net.nemerosa:versioning:2.1.0'
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
	}
}

plugins {
	id "org.sonarqube" version "3.1.1"
	id 'groovy'
}

apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: "org.sonarqube"
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'build-dashboard'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jacoco {
	toolVersion = '0.8.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
	afterEvaluate {
		getClassDirectories().setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'**/BaseRestContract.*',
					'**/configuration/*'
			])
		}))
	}
}

configurations {
	jaxb
}

test.finalizedBy jacocoTestReport

dependencies {
	implementation "org.codehaus.groovy:groovy-all:3.0.7"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1"
	implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.7.0'
	implementation "io.jaegertracing:jaeger-tracerresolver:0.29.0"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.glassfish.jersey.core:jersey-client:2.6"
	implementation "org.glassfish.jersey.core:jersey-common:2.6"
	implementation "org.glassfish.jersey.media:jersey-media-json-jackson:2.6"

	implementation 'wsdl4j:wsdl4j:1.6.1'
	jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
	runtimeOnly 'com.h2database:h2'

	testCompile "org.spockframework:spock-spring:1.3-groovy-2.5"
	testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompile 'com.h2database:h2:1.4.194'
	testCompile group: 'org.hsqldb', name: 'hsqldb'
	testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.10'
	testCompile "org.mock-server:mockserver-netty:3.10.8"
	testCompile "org.mock-server:mockserver-client-java:3.10.8"
}
